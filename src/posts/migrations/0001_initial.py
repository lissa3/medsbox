# Generated by Django 4.2.1 on 2023-07-14 19:47

import uuid

import autoslug.fields
import django.db.models.deletion
import taggit.managers
from django.conf import settings
from django.db import migrations, models

import src.core.utils.base
import src.posts.models.categ_model


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("taggit", "0005_auto_20220424_2025"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("path", models.CharField(max_length=255, unique=True)),
                ("depth", models.PositiveIntegerField()),
                ("numchild", models.PositiveIntegerField(default=0)),
                ("name", models.CharField(max_length=30)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False, populate_from="name", unique=True
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=src.core.utils.base.upload_img,
                        verbose_name="Icon",
                    ),
                ),
            ],
            options={
                "verbose_name": "Category",
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("title", models.CharField(max_length=255)),
                ("title_ru", models.CharField(max_length=255, null=True)),
                ("title_en", models.CharField(max_length=255, null=True)),
                ("title_uk", models.CharField(max_length=255, null=True)),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        blank=True, editable=True, populate_from="title", unique=True
                    ),
                ),
                ("content", models.TextField()),
                ("content_ru", models.TextField(null=True)),
                ("content_en", models.TextField(null=True)),
                ("content_uk", models.TextField(null=True)),
                (
                    "top_img",
                    models.ImageField(
                        blank=True, null=True, upload_to=src.core.utils.base.upload_img
                    ),
                ),
                ("url_top_img", models.URLField(blank=True, default="")),
                (
                    "status",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "drafts"), (1, "reviews"), (2, "published")],
                        default=0,
                    ),
                ),
                ("is_deleted", models.BooleanField(default=False)),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("featured", models.BooleanField(blank=True, default=False)),
                ("allow_comments", models.BooleanField(default=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "categ",
                    models.ForeignKey(
                        default=src.posts.models.categ_model.Category.get_default_pk,
                        on_delete=django.db.models.deletion.SET_DEFAULT,
                        to="posts.category",
                    ),
                ),
                (
                    "tags",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="Tags should be separated by comma",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
